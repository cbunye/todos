{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkSyle","textDecoration","Header","react_default","a","createElement","style","Link","to","TodoItem","getStyle","borderBottom","_this","props","todo","completed","_this$props$todo","this","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","key","AddTodo","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","value","inherits","createClass","display","placeholder","flex","className","About","Fragment","App","uuid","v4","toConsumableArray","filter","newTodo","_this2","BrowserRouter","layout_Header","Route","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c91bf013.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header () {\n\treturn (\n\t\t<header style={ headerStyle }>\n\t\t\t<h1>TODO LIST</h1>\n\t\t\t\t<Link style={linkSyle} to=\"/\"> Home </Link> |\n\t\t\t\t<Link to=\"/about\"> About </Link>\n\t\t</header>\n\t\t)\n\t}\n\nconst headerStyle = {\n\tbackground: '#333',\n\tcolor: 'white',\n\ttextAlign: 'center',\n\tpadding: '10px',\n}\t\n\nconst linkSyle= {\n\tcolor: '#fff',\n\ttextDecoration: 'none',\n}\n\nexport default Header;\t","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n\tgetStyle = () => {\n\t    \treturn {\n\t    \t\tbackground: 'silver',\n\t    \t\tpadding: '10px',\n\t    \t\tborderBottom: '1px #ccc dotted',\n\n\t    \t\ttextDecoration: this.props.todo.completed ?\n\t    \t\t'line-through' : 'none'\n\t    \t}\n\t}\n\n\t    render() {\n\t    \t//console.log(this.props.todos)\n\t    \tconst { id, title } = this.props.todo;\n\t        return (\n\t        <div style={this.getStyle()}>\n\t            <p>\n\t            \t<input type=\"checkbox\" onChange={this.props.markComplete.bind (this, id)} /> {''}\n\t            \t{ title }\n\t            \t<button onClick={this.props.delTodo.bind (this, id)} style={btnStyle} >x</button>\n\t            </p>\n\t        </div>\n\t        )\n\t    }\n}\n\nTodoItem.propTypes = {\n\ttodo: PropTypes.object.isRequired\n}\n\nconst btnStyle= {\n\tbackground: '#ff0000',\n\tcolor: '#fff',\n\tborder: 'none',\n\tpadding: '5px 9px',\n\tborderRadius: '50%',\n\tcursor: 'pointer',\n\tfloat: 'right',\n}\n\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n    render() {\n    \t//console.log(this.props.todos)\n        return this.props.todos.map((todo) =>(\n        \t<TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo} />\n        ));\n    }\n}\n\nTodos.propTypes = {\n\ttodos: PropTypes.array.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react';\n\nexport class AddTodo extends Component {\n\tstate = {\n\t\ttitle: ''\n\t}\t\n\t\tonSubmit = (e) => {\n\t\t\te.preventDefault();\n\t\t\tthis.props.addTodo(this.state.title);\n\t\t\tthis.setState({ title: '' });\n\t\t}\n\t\tonChange = (e) => this.setState ({ [e.target.name]: e.target.value });\n\n\trender () {\t\n\t\treturn (\n\t\t\t<form onSubmit={this.onSubmit} style={{ display: 'flex'}}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"title\"\n\t\t\t\t\tplaceholder=\"AddTodo...\"\n\t\t\t\t\tstyle={{ flex: '10', padding:'5px'}}\n\t\t\t\t\tvalue={ this.state.title }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tname=\"Submit\"\n\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\tstyle={{ flex: 1 }}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t)\n\t}\t\n}\n\nexport default AddTodo;\n\n","import React from 'react';\n\nfunction About() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1> About </h1>\n\t\t\t<p> Next Page </p>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default About;\t","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route  } from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport uuid from 'uuid';\n//import axios from 'axios';\n\n\nclass App extends Component {\n    state = {\n        todos: [\n            {\n                \"id\": uuid.v4(),\n                \"title\": \"delectus aut autem\",\n                \"completed\": false\n            },\n            {\n                \"id\": uuid.v4(),\n                \"title\": \"quis ut nam facilis et officia qui\",\n                \"completed\": true\n            },\n            {\n                \"id\": uuid.v4(),\n                \"title\": \"fugiat veniam minus\",\n                \"completed\": false\n            },\n            {\n                \"id\": uuid.v4(),\n                \"title\": \"fugiat veniam minus\",\n                \"completed\": false\n            },\n            {\n                \"id\": uuid.v4(),\n                \"title\": \"quis ut nam facilis et officia qui\",\n                \"completed\": true\n            },\n        ]\n    }\n    //Toggle Complete\n    markComplete = (id) => {\n        this.setState({ todos: this.state.todos.map(todo => {\n            if(todo.id === id) {\n                todo.completed= !todo.completed\n            }\n            return todo;\n\n        })  });\n    }\n    //Delete Todo\n    delTodo = (id) => {\n        this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n    }\n    //Add Todo\n    addTodo = (title) => {\n        const newTodo = {\n            id: uuid.v4(),\n            title,\n            completed: false\n        }\n        this.setState({ todos: [...this.state.todos, newTodo]});\n    }\n\n\n            render() {\n                return (\n                <Router>    \n                    <div className=\"container\">\n                        <Header />\n                        <Route exact path=\"/\" render={props =>(\n                            <React.Fragment>\n                                <AddTodo addTodo={this.addTodo} />\n                                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n                            </React.Fragment>\n                        )}/> \n                         <Route path=\"/about\" component={About}/> \n                    </div>\n                </Router>\n                );\n            }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}